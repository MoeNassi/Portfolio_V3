<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        .slider-container {
            width: 300px;
            overflow: hidden;
            margin: 20px;
            cursor: grab;
        }

        .slider-content {
            display: flex;
            transition: transform 0.5s ease-in-out;
        }

        .slide {
            flex: 0 0 100%;
        }

        img {
            width: 100%;
            height: auto;
        }
    </style>
</head>
<body>

<div class="slider-container" id="sliderContainer">
    <div class="slider-content" id="sliderContent">
        <div class="slide"><img src="image1.jpg" alt="Slide 1"></div>
        <div class="slide"><img src="image2.jpg" alt="Slide 2"></div>
        <div class="slide"><img src="image3.jpg" alt="Slide 3"></div>
    </div>
</div>

<script>
    const sliderContainer = document.getElementById('sliderContainer');
    const sliderContent = document.getElementById('sliderContent');
    let isDragging = false;
    let startPosition = 0;
    let currentTranslate = 0;

    sliderContainer.addEventListener('mousedown', startDrag);
    sliderContainer.addEventListener('touchstart', startDrag);

    document.addEventListener('mouseup', endDrag);
    document.addEventListener('touchend', endDrag);

    document.addEventListener('mousemove', drag);
    document.addEventListener('touchmove', drag);

    function startDrag(e) {
        isDragging = true;
        startPosition = e.clientX || e.touches[0].clientX;
        currentTranslate = getTranslateX();
        sliderContainer.style.cursor = 'grabbing';
    }

    function endDrag() {
        if (isDragging) {
            isDragging = false;
            sliderContainer.style.cursor = 'grab';
        }
    }

    function drag(e) {
        if (isDragging) {
            const currentPosition = e.clientX || e.touches[0].clientX;
            const difference = currentPosition - startPosition;
            const newPosition = currentTranslate + difference;

            setTranslateX(newPosition);
        }
    }

    function getTranslateX() {
        const style = window.getComputedStyle(sliderContent);
        const matrix = new WebKitCSSMatrix(style.transform);
        return matrix.m41;
    }

    function setTranslateX(value) {
        sliderContent.style.transform = `translateX(${value}px)`;
    }
</script>

</body>
</html>
